thread_id,quotation,email_final_code
72369,"I think we shouldn't consider this as a valid thing to do and don't try to workaround initially incorrect code.. Nothing prevents - true, but that's plainly wrong from OS point of view to grab physical ranges for something without knowing what's actually behind on that platform.",1
152625,"I really like them, factually valuable comments. please express your concern so that we have a chance to move on.. I think that's a pity.. How do you plan to handle the external references?. How do you plan to handle the external references?. And changing the name and/or location will break that link, AFAIK.. So I hate this rst crap with a passion, so NAK from me.. So I hate this rst crap with a passion, so NAK from me.. Not perfect, but a first solution.. When one of the author of the original document objected, i felt it is better to back off. But if there is a consensus, i will proceed.. Initially i was sceptical of rst & once instead of hitting the fly, hit make htmldocs on the keyboard :)  and the opinion about it was changed. It was easy to navigate through various docs & the realized that various topics (& many) were present (yes it was there earlier also but had to dive inside Documentation & search   but now it was docs coming after you  that is myopinion.. instead of hitting the fly, hit make htmldocs on the keyboard :). It was thought that rst conversion could be done quickly, but since this was my first attempt with rst, had to put some effort to get a not so bad output, even if this patch dies, i am happy to have learnt rst conversion to some extent.  ",1
159308,If you pick some bits from another version andwant to credit someone else you can 'CC:' them or just mention it in the commit-message.. If you pick some bits from another version andwant to credit someone else you can 'CC:' them or just mention it in the commit-message.. How come you don't use this in kvm_arm_set_sei_esr()?,1
161354,"For 2500Base-X, do you report a speed of 2500Mbps through ethtool, or are you reporting 1000Mbps?  I don't see any code in this patch that deals with that.",1
165231,"My point is, we might as well take the opportunity to fix this right away, don't you think?",0
165657,"This really can be done in a cleaner way.. And that output should not be Vulnerable"" like you force with the hackabove."". It actually should tell WHY it is vulnerable despite having had protection in place before the module was loaded.. These newlines are there to separate stuff for readability sake.",1
166193,I didn't get any response to a comment I've written about the point above during the previous patch iteration,1
167856,Thanks for the detailed answer about what you have in mind.,0
168060,This does not make sense vs. the documentation:,1
168169,"Thanks a lot for all this work! It was long overdue and it is nice to see the project finally getting to an end, after passing into so many hands!. All this time, I thought these parameters were for power gating... I also did not expect that clock gating had to be disabled before we could program them. Great find!. I am not sure I understand the purpose of this level here.. Aside from all these nitpicks, the approach is quite self contained and I like the following patches. Well done!. If you agree with having a single enable bit for CG, then a simple: Clockgating status: (boot|optimized) would work perfectly.",0
168668,"Again, 'boutside' protection ...",1
169133,"You should send the patch to yourself and try to apply the patch you receive, do not send to the list until you can pass the test properly.. I cannot apply a patch which has been corrupted by your email client like this.. So it is not my theory guessing, it is a real problem.. The timer is supposed to restart the protocol again, that's how this whole thing is designed to work.. The timer is supposed to restart the protocol again, that's how this whole thing is designed to work.. I think you are making changes to the symptom rather than the true cause of the problems you are seeing.. Sorry, I will not apply this until the exact issue is better understood.. Do not use attachments to fix this problem, the patch must be inline after your commit message and signoffs.. But if you have a better idea to fix it, I am glad to see it.. But if you have a better idea to fix it, I am glad to see it. Anyway, this issue have to be fixed.. If it's worth the effort at this point, I don't know.. Sorry about being late, just returned home and am trying to get all the backlogs under control.",1
170193,"Thanks for the review and apologies for the delay.. I cannot comment on your proposal because I do not know where to find the reference you made, or maybe I do not understand what you mean :-(. So one gets this far, but has no actual idea of how to do these things.Which leads me to wonder: what is this document for?. Most of the people reading it are likely wanting to learn how to *use* this API, I think it would be best to not leave them frustrated.. Can you please point me to this function/macro? I don't seem to be able to find it, at least not in 4.15. You could improve things a lot by (once again) going to RST and using directives to bring in the kernel doc comments from the source (which, I note, do exist).. Thanks for the review and apologies for the delay.. Who are you expecting to read it?",1
173287,You can't do it this simply as it will cause deadlock due to nested locking of the buf_lock.. You can't do it this simply as it will cause deadlock due to nested locking of the buf_lock.,1
174463,Shouldn't there be a at least a comment to explain why zero is an appropriate initialization value in that case?. I've looked at your patch for way too long now and still don't see how you've shown it to be correct.,1
174735,"Why you want checks for something that not exist ?. You can very well impose that in the core, except you don't duplicate the code.. Why you want checks for something that not exist ?. So you remove all NULL pointer checks ? Esp. in security-sensitive code? What is the impact of this non-critical path code on performance?. Come on .... This makes no sense, cfr my comment on 5/5. This looks really nonsensical and the commit message doesn't explain the rationale for that at all.. Ask yourself why crypto do not check for NULL in ahash digest or other required ahash functions.. So you remove all NULL pointer checks ? Esp. in security-sensitive code? What is the impact of this non-critical path code on performance?. You implemented the same code thrice, it surely is not reduced.. As I said above, it reduces binary size at cost of more source code in few drivers.. Are you suggesting that the kernel code should NOT perform NULL pointer checks ?. Are you suggesting that the kernel code should NOT perform NULL pointerchecks ?. Are you suggesting each driver should implement every single callback available and if it is not implemented, return -ENOSYS ?. Are you suggesting each driver should implement every single callback available and if it is not implemented, return -ENOSYS ?. You implemented the same code thrice, it surely is not reduced.. One do not load all crypto drivers at once, simple because one board has only one crypto HW (or few closely related), and if one even try, almost none of them will initialize on given hardware.. It does NOT reduce the binary size, just try compiling all the drivers in and it will make the kernel bigger.. It does NOT reduce the binary size, just try compiling all the drivers in and it will make the kernel bigger.. You can compile kernel with generic config and at that point you have all the duplicated code stored on your machine.",1
180488,"Sorry, I missed that. If mmap_sem is not needed for migrate_pages(), please ignore this patch.",0
183468,Thanks for testing this and letting me know.,0
202437,"Have you taken any other solution approaches into account than  a quick rejection?. Have you taken any other solution approaches into account than  a quick rejection?. Would you like to answer my still remaining questions in any more constructive ways?. Would you like to answer my still remaining questions in any more constructive ways?. Just so you know, I'll reject any future patch series that do not follow these rules.. I would also suggest that your time might be spent more productively if you would work on some more useful projects. There is more than enough to do. However, that's up to you.. Feel free to repost, but only if you organize the patch as either fixing the same type of issue for a whole subdirectory (media/usb, media/pci, etc) or fixing all issues for a single driver.. How would you ever like to clean up stuff in affected source files which was accumulated (or preserved somehow) over years?. Just use common sense when posting these things in the future.. I would also suggest that your time might be spent more productively if you would work on some more useful projects.. Would you like to share any more information from this meeting?. I find it very surprising that you rejected 146 useful update suggestions so easily.. While we do not mind cleanup patches, the way you post them (one fix per file) is really annoying and takes us too much time to review.. While we do not mind cleanup patches, the way you post them (one fix per file) is really annoying and takes us too much time to review.. Would you dare to apply any (of my) scripts for the semantic patch language directly on the whole directory for multi-media software?. Will any development (or management) tools like quilt fold¬ù make the regrouping of possible update steps more convenient and safer?. I find it very surprising that you rejected 146 useful update suggestions so easily.. Could your reaction have been different if the remarkable number of  change possibilities were sent by different authors (and not only me)?. Are you going to answer any of my remaining questions in a more constructive way?. Are you going to answer any of my remaining questions in a more constructive way?. Are you going to answer any of my remaining questions in a more constructive way?. Do any contributors get into the mood to take another look at software updates from my selection of change possibilities in a more constructive way?. We don't have the time to wade through dozens of one-liner cleanup patches.. We don't have the time to wade through dozens of one-liner cleanup patches.. One last time: either post per-driver patches with all the cleanups for a driver in a single patch, or a per-directory patch (drivers/media/pci, usb, etc) doing the same cleanup for all drivers in that directory.. would you get frightened still by any other change combination?. We have got different preferences for a safe patch granularity.. There are communication difficulties to consider since your terse information from your conference meeting.. If you would insist on patch squashing, would you dare to use a development tool like quilt fold also on your own once more?. Can you handle bigger patches really better than similar patch series?. Are there any further possibilities to consider around consequences from a general change resistance?. Fix your tools before you send any more patches.. Yes, and you were told not to do it like that again.. Will you accept increasing risks because of bigger patch sizes?. > Would you like to share any more information from this meeting???? I did that: either one patch per directory with the same type of change, or one patch per driver combining all the changes for that driver.. Use normal patch styles. Fix your tools before you send any more patches.. I prefer the first approach, but it's up to you.",1
207400,"yes, that static arrays are not very forward-thinking and yes my arrays are not consistent.. Thanks for catching that.. oops, did not mean to submit that. Cool. I would say this is done right.",0
210458,"So this is a case of the compiler trying to be smarter than it really is, and getting things totally wrong :(. Wait, what?  Why would it do that, because it thinks dereferencing NULL is undefined behaviour and it can just do whatever it wants to?. That feels crazy, as for these calls we know it will never be NULL because the previous call to debug fs_file_get() will always ensure it will be correct.. Papering over compiler foolishness is not something I like to do in kernel code if at all possible.... Then fix the tool, the C code is correct :). Then tell clang not to do that, like we tell gcc not to do that as that is a foolish thing for a compiler to do when building the kernel.. Wait, clang does not have that?  That's crazy, how has this not been hit yet when building the kernel?. Then tell clang not to do that, like we tell gcc not to do that as that is a foolish thing for a compiler to do when building the kernel.",1
216128,I can't find mention of amdcz in Linus's tree nor linux-next.. Can you possibly send the entire series again and CC all patches to linux-acpi and fix the kbuild warnings if the are relevant for that matter?. Sorry for being dense.,0
221804,When you use explicit casting in printf() you are doing in 99.9% casessomething wrong.,1
222860,"(IOW, I would say over my dead body  but I have no power here.). Since when do U-Boot patches go to LKML and dri-devel?. Since when do U-Boot patches go to LKML and dri-devel?. Anyway, I'll try my best to ignore this series.. How many times are we going to allow copy-and-pasting the same driver?. I'm going to be real disappointed if we see another fork get merged.. How many times are we going to allow copy-and-pasting the same driver?. Can you add a commit message explaining why you add a specific defconfig for this board.",1
230843,"In any case, if you insist, I can try to rework the whole stuff implementing module_finalize().",0
231231,So make it fit by returning an unsigned int.,0
232313,Maintainers don't mine mailing lists for patches to apply.. You'll need to send the patch to someone if you want it to be merged.,1
239101,"I never did get an answer about how the sg array is free'd in certain error paths (see FIXME:"" in the 2nd patch)."". Regarding free of sg in two error paths, you were correct.. Thank you so much for many style, formatting and other issues fixes and also for integration of 'check_at_most_once' patch, it saved me several review iterations.. I never did get an answer about how the sg array is free'd in certain error paths (see FIXME:"" in the 2nd patch)."". I'll be pretty frustrated if you submit v2 that is blind to the kinds of changes I made.",1
245912,"Then what? Shouldn't this result in probe deferral or something more useful instead of just being ignored ?. I'm only just learning about PECI, but I do have some general comments below.. All of this code is for debugging only. Do you want to put it behind some kind of conditional?. Would it be possible to find common code and use functions for it instead of duplicating everything several times ?. I didn't put that warning in there for no good reason.. You are trying to out smart the kernel by getting rid of a warning message that was explicitly put there for you to do something.. As per the in-kernel documentation, I am now allowed to make fun of you.. Please go read the documentation again.... There is a lot of duplication in those functions.",1
254985,You will have to be patient because this is a rather big change and itwill take quite some time to get sorted.,1
258997,"Can you fix it correctly by replacing the 'switch' by a 'if' instead of adding dead branches to please gcc?. Could you please just merge the obvious fix from Arnd instead?. If people don't care enough about their code to even check the warnings, I'm not going to waste one second pulling the resulting garbage. It's that simple.. If people don't care enough about their code to even check the warnings, I'm not going to waste one second pulling the resulting garbage. It's that simple.. If people don't care enough about their code to even check the warnings, I'm not going to waste one second pulling the resulting garbage. It's that simple.. I'm really sorry for this.. I'm not the one that added this switch statement (it has been there since 2011) and I would be happy to remove it.",1
259276,"Did you actually test this?. I admit I am not familiar with this driver.I did not know this driver is only loaded during system boot-up time, I thought this driver can be loaded as a kernel module (like many drivers) after system booting.After knowing this, I admit my patch is not proper, sorry.... After knowing this, I admit my patch is not proper, sorry.... Did you actually test this?",1
261377,"your patch is corrupted to the point where any attenpt to fix it up on my side failed. This doesn't have to be on separate lines, as written, it just causes confusion.",1
261866,"Sorry, but this is a hack to *try* to make multi-slot work and this isn't sufficient.",1
266017,"Well, I am not sure. Could you please give me hints, how to debug this further? Is there some debug flag?. Could you analyze further instead of blindly putting the flag?. Could you analyze further instead of blindly putting the flag?. What actually took so long?",1
266279,"let's not just start adding bloatware where not needed.. Please enlighten me: how do you think this could be exploited?. Please notice that I'm fine if you want to submit potential Spectre variant 1 fixups, but if you're willing to do so, please provide an explanation about the potential threat scenarios that you're identifying at the code.. Sorry for the noise and thanks for the feedback.. Sorry for the noise.. Ok, a poor man approach would be to pass the array directly to the core and let the implementation there to implement the array fetch logic  calling array_index_nospec() there  but I wonder if are there any other way that won't require too much code churn.. I see I've missed some obvious things that you've pointed out here. I'll mark these warnings as False Positives and take your points into account for the analysis of the rest of the Spectre issues reported by Smatch.",1
266918,"I'll remember all this for the next time (if next time there is,of course, I was already quite hesitant to spend time to prepare and send patches for these issues with enum/integer mix-up).. Sorry for the annoyance,. make this a true patch series. fix the indentation of the functions whose arguments span multiple lines as has been pointed out to you in patch feedback.. Luc please don't submit such a huge number of patches all at one time.. It seems it was a bad guess, andyes, I see the point of having a series for this.",1
281311,"It looks like you are not actually sure what you are doing then.. Either it does exist, or it doesn't.. It looks like you are not actually sure what you are doing then.. If it exists, it needs to be fixed.  If it doesn't exist, nothing needs to be done. Which is the case?",1
289026,"Try to look at previous discussions why it has been decided to have a separate hugetlb pages at all.. I've asked in other email so I guess I will get an answer there but let me just emphasize again that I absolutely detest a possibility to put hugetlb pages into the memcg mix.. This all looks so hackish and ad-hoc that I would be tempted to give it an outright nack, but let's here more about why do we need this fiddling at all.. I am also quite confused why you keep distinguishing surplus hugetlb pages from regular preallocated ones.. As you said, it must be an alien.. Thanks to the interaction up to here, I understood that my solution is inappropriate. I will look for another way.. Could you explain what you were concerned about?. It would be greatly appreciated if you could mention why we can not charge surplus hugepages to memcg.. I will completely apologize if my way of thinking is wrong.. I apologize for having confused.. So I would argue that you have quite a good knowlege of the setup. If you need a greater flexibility then just do not use hugetlb at all and rely on THP.. I am sorry that I didn't join the discussion for the previous version but time just didn't allow that. So sorry if I am repeating something already sorted out.. My cgroup experience and knowledge is extremely limited, but it does not appear that any other resource can be controlled by multiple controllers.. It would be good to get comments from people more cgroup knowledgeable, and especially from those involved in the decision to do separate hugetlb control.. I could not understand the intention of this question, sorry.",1
289431,"I'm not sure I understand what you intend here.. I'm fine with either approach.. Where did this come from? XFS doesn't use the underlying blockdev address space, so this does nothing at all and should not be here.. Where did this come from? XFS doesn't use the underlying blockdev address space, so this does nothing at all and should not be here.",1
303621,I never said we were perfect reviewers. Feel free to help in the process.. The SPDX header is explicitly here to remove the license text and create a tag that is in a indirect reference to the license text in LICENSES. It's not going away.,1
306145,Your email client should not be forcing you to top post. So please don't.. But you did it again..... Your email client should not be forcing you to top post. So please don't.. wrap your lines at around 75 characters,1
307410,"Oops, sorry, I double posted patch 5.. If you have a better way to fix this, I'd be glad to hear it.. What you didn't notice is that split_remote() separates the colon whether there is a host or not. It's not passed to ssh or cat (or whatever) directly. So the change you propose will actually break the how it was designed.. So the change you propose will actually break the how it was designed.",1
310967,Making a non-fatal error fatal doesn't serve a useful purpose.. There are no unexpected results.,1
314071,"So I'm certainly in favor of this patch landing in mainline, but you should be aware that there may be some opposition to it.",0
331266,"This is an RFC series, it's not meant for you to take at this point,it's about discussing the overall approach to exposing BMC random tunables"" as explained in patch 0 of the series."". you need to document the heck out of this in the changelog to help explain all of these odd design decisions.. you need to document the heck out of this in the change log to help explain all of these odd design decisions.. If you do, that's a huge hint something is wrong here.. Oh come on, putting a basic here is what this patch does comment should be part of every patch otherwise what is there to comment on if we don't know what is going on in the patch itself?. Why are you messing around with raw ""kobject attributes?"". You can just read the patch which is... the documentation :). Why are you messing around with raw ""kobject attributes?"". This is a device, you should never have to mess with sysfs calls or kobject calls or structures directly.. You can just read the patch which is... the documentation :). What is this crazy union for?. That's an oddly-hard-coded array size for no good reason :(. What is this crazy union for?. I can't take patches without any changelog text at all :(",1
336834,You grow that structure from 64 bytes to 96 bytes and with that grow the static footprint of the kernel by 512k (in the very best case) possibly again breaking things like sparc (which have a strict limit on the kernel image size).. It's likely because you infer about certain aspects which are not clearly stated in the deadlock report.. You likely also infer about the order of consuming the locks based on the contents of the stack dump associated to each lock.. You likely also infer about the order of consuming the locks based on the contents of the stack dump associated to each lock.. I still hope that I can get some feedback from community regarding the actual cpufreq-related issue pointed out in the splat.. And all that for data that I've never needed and never even considered useful when looking at lockdep output.. It's likely because you infer about certain aspects which are not clearly stated in the deadlock report.,1
346223,"In other words, I'm trying to understand how much benefit this patchset will provide to our users as a whole.",0
347183,"Hopefully I'm not missing anything here, but this doesn't really make any sense. I'm not sure I explained myself as well as I thought I did.. First of all, I was mistaken when I wrote above that a check for !drm_kms_helper_is_poll_worker() would solve the problem.  Sorry!. First of all, I was mistaken when I wrote above that a check for !drm_kms_helper_is_poll_worker() would solve the problem.  Sorry!. phew. that took a LONG time to come up with.. As for whether or not this patch is even the right solution, I will need to confirm that tommorrow (if you don't think it is still, please feel free to say so!) because it's getting late here.. As for whether or not this patch is even the right solution, I will need to confirm that tommorrow (if you don't think it is still, please feel free to say so!) because it's getting late here.. Hopefully I explained that better this time, I'll definitely make sure to actually include that diagram in the patch.. Turns out I was missing a couple of parts, so I'm going to try again at explaining this using a diagram that shows the various threads running concurrently. To behonest, I had to double check this about literally 20 times to make sure I was actually understanding this issue correctly.",0
358863,"So all these return -E..."" in the instances are completely pointless. Furthermore, who the hell cares which callback has stepped into it?. The first time it happened from getdents(2) in a 32bit process and that's all you'll ever get out of me"" seems to be less than helpful...""",1
365796,"Your control-bank-cfg seemed like having much room for improvement, and it would for sure raise questions on why it was implemented that way.. Just a blind shot, without going into details - could you please check if led-sources property documented in the common LED bindings couldn't help here?. This is better than my proposal.. Don't see how you could compute this.",1
368515,"I welcome this feature, been wanting it for some time now.. Having a CODE_PAGE_SIZE is therefore useful. I am happy adding it on top on your proposal.",0
372597,"Please fix this, email a test patch to yourself, and do not resend the patch to this mailing list until you can successfully extract and cleanly apply the test patch you email to yourself.",1
374095,Good find! I'll queue this for the next fixes-pull-request.,0
377230,"FWIW, can you post the actual profile you are seeing in the commit message? That helps us identify similar problems in the future, and it lets us know what paths are leading to the transaction reservation contention. i.e. this may not even be a problem with the transaction reservation code itself.. Thanks for your detailed review of the patch. I now have a better understanding of what should and shouldn't be done.",0
378505,"Again I'll ask: what is the performance when the log is made large enough that your benchmark is *not hammering the slow path*?. Can you please re-run and report the results for each patch on the ramdisk setup? And, please, include the mkfs.xfs or xfs_info output for the ramdisk filesystem so I can see /exactly/ how much concurrency the filesystems are providing to the benchmark you are running.",1
379138,I like the idea and I think it's good direction to go,0
383199,"Also, all your patches have the whitespace turned from tabs into spaces, making them impossible to be applied even if I wanted to :)",1
390394,"Sorry but I don't like imposing a run-time check on everybody when stack-based requests are the odd ones out.  If we're going to make this a run-time check (I'd much prefer a compile-time check, but I understand that this may involve too much churn), then please do it for stack-based request users only.",0
391895,"You gloss over a ton of details here, many of which are non trivial and marked broken in your patches.. All in all, I'm not inclined to consider this approach, it complicates an already overly complicated thing (cpu-cgroups) and has a ton of unresolved issues while at the same time it doesn't (and cannot) meet the goal it was made for.. Have you actually read your own code?. Have you actually read your own code?. Unless you have solid suggestions on how to deal with all of them, this is a complete non-starter.. Unless you have solid suggestions on how to deal with all of them, this is a complete non-starter.. Now explain to me how you're going to gang-schedule a VM with a good number of vCPU threads (say spanning a number of nodes) and preserving the rest of CFS without it turning into a massive trainwreck?. That is the whole and only reason you did this, and it doesn't even begin to cover the requirements for it.. There are known scalability problems with the existing cgroup muck, you just made things a ton worse.. There are known scalability problems with the existing cgroup muck, you just made things a ton worse.. I'll beg to differ, this isn't anywhere near something to consider merging.. Just because you find one example, where it is a bad idea, doesn't make it a bad thing in general.. You don't even begin to outline how you preserve smp - nice fairness.. That is the whole and only reason you did this, and it doesn't even begin to cover the requirements for it.. Even if you're not inclined -- at this stage, if I may be so bold :) --your feedback is valuable. Thank you for that.. I am happy to do any further debugging I can do, or try patches on top of those posted on the mailing list.. And then people will complain again that partitioning a system isn't dynamic enough and we need magic :/. Even if you're not inclined -- at this stage, if I may be so bold :). Bye bye interactivity. That is, what I call intrusive.. Do you believe me now, that L1TF is not the whole and only reason"" I did this? :D"". Mm... there is certainly room for interpretation. :)",1
399771,"How can you set a shared variable with no synchronization ? A bool is particularly dangerous here, at least on some arches.. Do not pave the way for future bugs, make your code robust, please.. Your patch adds a subtle possibility of future bugs, even if it runs fine today.",1
402510,"Note instead the time lapse between this and previous posting of the series, and if you want to assume something, assume things can get missed and forgotten without intent or malice.. You are assuming my actions and motivations and constructing a story.. Well it's not a pony, it is mechanism to avoid having to turn off all security. We can hopefully discuss it without ponies.. Sure, but you also used the word pile and I would argue that made the rest of your sentence  after and including ""instead""  sound like it not only bothers you I forgot to Cc people on the cover letter  but it also bothers you I included a ""pile"" of my own addresses. If that wasn't your intention in the slightest then I apologise for misreading it.. I was trying to guess your reasoning (cues in presumably and a lot of question marks) since it wasn't clear to me why is your position what it is.. I did not say at all that this might be diminishing security. And the argumentation with 'incompetent sysadmins' is just the wrong attitude.. If you can't explain and document it, then providing the knob is just fulfilling somebodys 'I want a pony' request.. Note instead the time lapse between this and previous posting of the series, and if you want to assume something, assume things can get missed and forgotten without intent or malice.. If you want to make a pettifogger contest out of this discussion, then we can stop right here.. We can hopefully discuss it without ponies.. I did not say that you mentioned google. But what is a sysadmin supposed to do when there is no documentation aside of using google? And not having documentation is basically the same thing as telling them to use google.. Guessing my reasonings has nothing to do with you mentioning incompentent sysadmins.. I explained it technically why just adding a knob without further explanation and analysis is not acceptable.. Ah only if google could simply answer all our questions!. It's not like there is or isn't a security risk and that you can say that it is or it isn't in a global way.. I said clearly that I'm not opposed against making it configurable. But because there is no single answer, it's even more important to have proper documentation. And that's all I'm asking for aside of making it opt-in instead of a wholesale expose everything approach.. You cannot expect that even competent sysadmins know offhand what which PMU might expose. And telling them 'Use Google' is just not the right thing to do.. You cannot expect that even competent sysadmins know offhand what which PMU might expose. And telling them 'Use Google' is just not the right thing to do.. Presumably you see adding fine grained control as diminishing the overall security rather than raising it? Could you explain why?. Sure, and because you don't know you didn't bother to ask around and ignored the review request.. Sure, and because you don't know you didn't bother to ask around and ignored the review request.. I accept it was by bad to miss adding Cc's on the cover letter,. It would be very helpful if you cc all involved people on the cover letter instead of just cc'ing your own pile of email addresses.. It would be very helpful if you cc all involved people on the cover letter instead of just cc'ing your own pile of email addresses.. This is really not helpful. The cover letter and the change logs should contain a summary of that discussion and a proper justification of the proposed change. Just saying 'sys admins might want to allow' is not useful at all, it's yet another 'I want a pony' thing.. my own email addresses hopefully should not bother you.. Just throwing magic knobs at sysadmins and then saying 'its their problem to figure it out' is not acceptable.. Just saying 'sysadmins might want to allow' is not useful at all, it's yet another 'I want a pony' thing.. You can add as many of yours as you want as long as everybody else is cc'ed.. All of this want's a proper documentation clearly explaining the risks and scope of these knobs per PMU.",1
410867,"Look, reviewing these are pretty stressful for me, because you aren't documenting your changes and in many cases the transformations look incorrect.. Please double check your work and resubmit this at some time in the not-too-near future.",1
422694,"The big question is why you did not stop to think and consider the context?. The big question is why you did not stop to think and consider the context?. Yes, I'm annoyed by mindless changes. Especially mindless changes aimed at improving readability while in fact making things less readable.. TL,DR, if you are desperate to fix the problem with this fall through comment  please do so in a way that preserves overall readability.. it would be nice to not blame the existing code for brain damage in GCC and various other static analyzers.. blaming the existing comment for not *properly* marking an intentional fall through is ... rich.. It would have been so damn easy and it does not take a whole lot of imagination to quiet down GCC while keeping the comments readable.. Considering the above added context, I have to say that this mindless change is not an improvement, as you have just destroyed the continued sentence from the previous comment.. The big question is why you did not stop to think and consider the context?. What is not proper about the existing comment? Yes yes  I *know* that GCC is not very intelligent about it and requires hand-holding  but blaming the existing comment for not *properly* marking an intentional fall through is ... rich."" . Considering the above added context, I have to say that this mindless change is not an improvement, as you have just destroyed the continued sentence from the previous comment.",1
424089,"What the heck does __visible do?. Certainly, byte-at-a-time is a pretty lame implementation when the addresses are suitably aligned.. But I'm wondering who is actually using this code!",1
431048,There seems to be a disconnect between what I am trying to communicate and what I perceive you to have understood.. I'll add comments below to try to make more clear what I'm trying to say.,0
467091,"But right now, you're telling me that we need to split the DW driver to prepare for features that have not even been discussed/proposed. That's what I'm complaining about.. If you were adding support for slaves, and were doing this split as part of this patch series explaining that part of the code between slave and master can be shared, then we wouldn't have this debate.. If you were adding support for slaves, and were doing this split as part of this patch series explaining that part of the code between slave and master can be shared, then we wouldn't have this debate.. But right now, you're telling me that we need to split the DW driver to prepare for features that have not even been discussed/proposed. That's what I'm complaining about.. Come on! All I've seen so far are complaints on tiny details, it definitely doesn't prevent you from adding new features.. I think you didn't read my reply carefully. I'm not saying I3C == USB, I'm just saying that the way you interact with an I3C from a SW PoV is not at all the same as you would do for an I2C device. Do you deny that?. I think this discussion is starting to be counterproductive with arguing of both parts. Unfortunately I don't see anyone given their inputs too.. I'm not saying I'm always right, but I need to understand the problems you're trying to solve to take a decision, and I don't think you initially gave all the details I needed to understand your PoV.",1
476403,"So I strongly disagree with this. Anybody that has trouble with 0/1 vs false/true needs to stay the heck away from C.. I would suggest we delete that stupid coccinelle scripts that generates these pointless warns.. I would suggest we delete that stupid coccinelle scripts that generates these pointless warns.. Not to mention that WARN is gramatically incorrect. We're not assigning 'bool' to 0/1 but the other way around. What crap... Not to mention that WARN is gramatically incorrect. We're not assigning 'bool' to 0/1 but the other way around. What crap... The kernel is not the place to try and abstract such stuff, C is our portable assembler. We muck with hardware, we'd better know how the heck it works.",1
482005,Note that this patch does *not* remove the nasty trap caused by the garbage in question - struct file can be freed before we even return from->unlocked_ioctl().  Could you describe in details the desired behaviour of this interface?. Note that this patch does *not* remove the nasty trap caused by the garbage in question - struct file can be freed before we even return from->unlocked_ioctl().  Could you describe in details the desired behaviour of this interface?,1
498594,"If you want to provide more accurate documentation then you better come up with something which is helpful instead of completely useless blurb like the below. If you want to provide more accurate documentation then you better come up with something which is helpful instead of completely useless blurb like the below. If you want to provide more accurate documentation then you better come up with something which is helpful instead of completely useless blurb like the below. Actually, I still call it a lie. Document clearly says that bug is fixed in non-virtualized cases, when in fact it depends on PAE and limited memory.. At this point I want you to fix it yourself.. You called it a lie from the very beginning or what do you think made me tell you that?. Lying about security bugs being fixed when they are not is not cool. I tried to be helpful and submit a patch, but I don't feel like you are cooperating on getting the patch applied.. You called it a lie from the very beginning or what do you think made me tell you that?. I would really like to get an ack from the people who have been deep into this first.. Calling this a lie is a completly unjustified personal attack on those who spent quite a lot of time on writing up documentation in the first place. It's suggesting that this document was written with malicious intent and the purpose of deceiving someone.. Sorry, that we weren't able to live up to your high standards.. Care to explain why you are assuming this to be the case?. Take a care to look at the patch I submitted? Lie:# A system with an up to date kernel is protected against attacks from # malicious user space applications. 3GB system running 32bit kernel is not protected. Same is true for for really big 64bit systems.. Care to tell what's a lie instead of making bold statements?. So how should it be called? I initally used less strong words, only to get ""Care to tell what's a lie instead of making bold statements?"" back. Also look at the timing of the thread.",1
511533,"Again, no.",1
521470,"I might be wrong, and if that's not the case I can take a look deeper and the end of the week.",0
522705,"I would drop this patch for being too ugly and if nothing else, for lack of users (epoll will no longer need dlock).",1
539613,"Also use tag selftests/tpm2 instead of having two tags in the short summaries. Now they look a bit weird.. Since when is the cover letter mandatory? I understand that is helps for a complicated patch set to explain the problem and solution in the cover letter, but for this simple test case addition what's the point? And there is nothing forcing a cover letter in https://www.kernel.org/doc/html/v4.20/process/submitting-patches.html",1
541450,"I don't think not fixing it because it's not fixed yet is a good reason to keep things the way they are. But maybe that's just me. Given that the structure has already been extended several times  there is pretty much nothing to keep this from happening again and again.. There probably is a decent compromise to find between not accepting a single additional byte and accepting several GB.For example how likely is it that the growth of this structure make it go over a page? I would hope not at all.. Thats a misleading statement.  We've never supported running newer applications on older kernels, and no one is forcing anyone to use the lksctp-tools library,I was only suggesting that, if we were to support this compatibility, that might be a place to offer it.. Also misleading, as it assumes that we're not intentionally doing this.  I get wanting to support running applications built for newer kernels on older kernels, but thats just not something that we do, and to say thats broken is misleading.  Older applications are required to run on newer kernels, but not vice versa, which is what you are asking for.. I won't disagree about the niceness of versioning, but that ship has sailed.. What a complete mess we have here.. I don't think not fixing it because it's not fixed yet is a good reason to keep things the way they are. But maybe that's just me.",1
546823,Looking more flexible does not make it more correct.. Looking more flexible does not make it more correct.,1
571417,This is phenomenal. Thank you so much for digging into this.,0
